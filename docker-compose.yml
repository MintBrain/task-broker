version: '3.8'

services:
  apigateway:
    image: yourusername/apigateway:latest # Замените на ваш образ
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5000:80" # Проброс порта для ApiGateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - TaskQueue__BaseUrl=http://taskqueue:80 # URL для TaskQueue
    depends_on:
      - taskqueue

  taskqueue:
    image: yourusername/taskqueue:latest # Замените на ваш образ
    build:
      context: ./TaskQueue
      dockerfile: Dockerfile
    ports:
      - "5001:80" # Проброс порта для TaskQueue
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=taskqueue;Username=postgres;Password=yourpassword # Параметры подключения к PostgreSQL
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__QueueName=taskqueue # Название очереди

  taskexecutor:
    image: yourusername/taskexecutor:latest # Замените на ваш образ
    build:
      context: ./TaskExecutor
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__QueueName=taskqueue # Название очереди

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672" # Web UI RabbitMQ
      - "5672:5672" # AMQP
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  db:
    image: postgres:latest
    ports:
      - "5432:5432" # Проброс порта для PostgreSQL
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: taskqueue
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
